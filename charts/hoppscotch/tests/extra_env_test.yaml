suite: Extra Environment Variables
templates:
  - templates/deployment.yaml
  - templates/job.yaml
  - templates/configmap.yaml
  - templates/secrets.yaml
tests:
  - it: should add extraEnvVars to main container
    set:
      extraEnvVars:
        - name: TEST_VAR
          value: test-value
        - name: FIELD_REF_VAR
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
    asserts:
      - equal:
          path: spec.template.spec.containers[0].env[0].name
          value: "TEST_VAR"
        template: templates/deployment.yaml
      - equal:
          path: spec.template.spec.containers[0].env[0].value
          value: "test-value"
        template: templates/deployment.yaml
      - equal:
          path: spec.template.spec.containers[0].env[1].name
          value: "FIELD_REF_VAR"
        template: templates/deployment.yaml
      - equal:
          path: spec.template.spec.containers[0].env[1].valueFrom.fieldRef.fieldPath
          value: "metadata.name"
        template: templates/deployment.yaml

  - it: should add extraEnvVarsCM to main container
    set:
      extraEnvVarsCM: my-configmap
    asserts:
      - contains:
          path: spec.template.spec.containers[0].envFrom
          content:
            configMapRef:
              name: my-configmap
        template: templates/deployment.yaml

  - it: should add extraEnvVarsSecret to main container
    set:
      extraEnvVarsSecret: my-secret
    asserts:
      - contains:
          path: spec.template.spec.containers[0].envFrom
          content:
            secretRef:
              name: my-secret
        template: templates/deployment.yaml

  - it: should add all extra env configurations together
    set:
      extraEnvVars:
        - name: TEST_VAR
          value: test-value
      extraEnvVarsCM: my-configmap
      extraEnvVarsSecret: my-secret
    asserts:
      - equal:
          path: spec.template.spec.containers[0].env[0].name
          value: "TEST_VAR"
        template: templates/deployment.yaml
      - contains:
          path: spec.template.spec.containers[0].envFrom
          content:
            configMapRef:
              name: my-configmap
        template: templates/deployment.yaml
      - contains:
          path: spec.template.spec.containers[0].envFrom
          content:
            secretRef:
              name: my-secret
        template: templates/deployment.yaml

  - it: should add extraEnvVars to init containers
    set:
      extraEnvVars:
        - name: INIT_VAR
          value: init-value
    asserts:
      - equal:
          path: spec.template.spec.initContainers[0].env[0].name
          value: "INIT_VAR"
        template: templates/deployment.yaml
      - equal:
          path: spec.template.spec.initContainers[0].env[0].value
          value: "init-value"
        template: templates/deployment.yaml
      - equal:
          path: spec.template.spec.initContainers[1].env[0].name
          value: "INIT_VAR"
        template: templates/deployment.yaml

  - it: should add extraEnvVars to job container
    set:
      setupDatabaseJob.enabled: true
      extraEnvVars:
        - name: JOB_VAR
          value: job-value
    asserts:
      - equal:
          path: spec.template.spec.containers[0].env[0].name
          value: "JOB_VAR"
        template: templates/job.yaml
      - equal:
          path: spec.template.spec.containers[0].env[0].value
          value: "job-value"
        template: templates/job.yaml

  - it: should not add env section when no extraEnvVars are set
    asserts:
      - notExists:
          path: spec.template.spec.containers[0].env
        template: templates/deployment.yaml

  - it: should add extra configmap and secret to job
    set:
      setupDatabaseJob.enabled: true
      extraEnvVarsCM: job-configmap
      extraEnvVarsSecret: job-secret
    asserts:
      - contains:
          path: spec.template.spec.containers[0].envFrom
          content:
            configMapRef:
              name: job-configmap
        template: templates/job.yaml
      - contains:
          path: spec.template.spec.containers[0].envFrom
          content:
            secretRef:
              name: job-secret
        template: templates/job.yaml
